@page "/escaneo"
@inject IJSRuntime JS
@inject Interface.Services.Equipos.IEquipoService EquipoService


<h3>Módulo de Escaneo</h3>

<div id="scanner-container" style="width: 100%; height: 400px; background-color: #000; overflow: hidden; position: relative;">
</div>


<!-- Modal de validación -->
<div class="modal fade" id="resultadoModal" tabindex="-1" aria-labelledby="resultadoLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="resultadoLabel">Información del equipo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p id="equipoInfo" class="mb-3"></p>
                <hr>
                <h6>Últimas transacciones:</h6>
                <ul id="historial" class="list-group"></ul>

                <div class="d-flex justify-content-end mt-4 gap-2 flex-wrap">
                    <button id="btn-desaprobar" class="btn btn-danger" data-bs-dismiss="modal">Desaprobar</button>
                    <button id="btn-aprobar" class="btn btn-success">Aprobar</button>
                </div>

                <div id="confirmacionTransaccion" class="alert alert-success d-none mt-3">
                    ✅ Transacción registrada correctamente.
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/@@ericblade/quagga2@1.2.6/dist/quagga.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    console.log("✅ Quagga cargado desde CDN");

    document.addEventListener("DOMContentLoaded", () => {
        console.log("🚀 DOMContentLoaded disparado");
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(() => {
                console.log("✅ Permiso de cámara concedido, iniciando Quagga...");
                Quagga.init({
                    inputStream: {
                        name: "Live",
                        type: "LiveStream",
                        target: document.querySelector('#scanner-container'),
                        constraints: {
                            width: 640,
                            height: 480,
                            facingMode: "environment"
                        }
                    },
                    decoder: {
                        readers: ["code_128_reader", "ean_reader"]
                    }
                }, function (err) {
                    if (err) {
                        console.error("❌ Error en Quagga.init:", err);
                        return;
                    }
                    console.log("✅ Quagga inicializado correctamente");
                    Quagga.start();
                });

                Quagga.onDetected(function (data) {
                    const code = data.codeResult.code;
                    console.log("📦 Código detectado:", code);
                    Quagga.stop();
                    // Llama a la función JS global para mostrar el modal
    if (typeof mostrarModalResultado === "function") {
        mostrarModalResultado(code);
    } else {
        console.warn("⚠️ mostrarModalResultado no está definido.");
    }
                });
            })
                    
            .catch(err => {
                console.error("❌ Error al acceder a la cámara:", err);
            });
    });
</script>

    @code {

        private async Task MostrarModalResultadoReal(string codigoBarras)
        {
            try
            {
                var equipoDto = await EquipoService.ConsultarPorCodigoBarrasAsync(codigoBarras);
                if (equipoDto != null)
                {
                    await JS.InvokeVoidAsync("mostrarModalResultado", equipoDto);
                }
                else
                {
                    Console.Error.WriteLine("⚠️ Equipo no encontrado.");
                }
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine("❌ Error al obtener información:", ex.Message);
            }
        }
    }


